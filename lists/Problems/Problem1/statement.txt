Problem:-
Find the Nth node from the end of linked list.

Approach 1:-
we start from head and count the no of nodes present after the current head. 
If the count is less than (N-1) then we cannot find the node simply because the N is too large and the no number of nodes are less than what is being asked.
If the count is more than (N-1) then we simply assign the current node to next node and repeat the process.
By the time the count is equal to (N-1), the current node will be the node that is the required node. We simply return the data present at that node.

Approach 2:-
we know that Nth element from end is (M-N+1)th element from the beginning, where M is the no of Nodes.
In this approach we use hashTable to store the data at each node.
From the formula we get the Nth element from the end.

Approach 3:-
In this approach we get the no of nodes present in the linked list and he simply apply the formula for finding the Nth element from back.
We traverse untill the counter reach the (M-N+1)th node.
By the time we reach that node we simply return the data present on that node.

Approach 4:-
We use two iterators. Initially both iterators point to head node.
When the second iterator has moved N times, the we start iterating first iterator.
By the time second iterator reach the last element, First iterator point the required node. We simply return the data present on that node.
